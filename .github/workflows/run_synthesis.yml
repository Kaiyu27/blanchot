# A descriptive name for your workflow
name: Weekly Data Synthesis

# Controls when the action will run
on:
  # Triggers the workflow at 02:00 UTC every Sunday.
  # You can change the time and day. Use crontab.guru to help.
  schedule:
    - cron: '0 2 * * 0'
  
  # Allows you to run this workflow manually from the Actions tab on GitHub
  workflow_dispatch:

# Defines the sequence of tasks that will be executed
jobs:
  build-and-commit:
    # The type of virtual machine the job will run on
    runs-on: ubuntu-latest

    # The steps that make up the job
    steps:
      # Step 1: Check out your repository's code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up the Python environment
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11' # Or whatever version you use

      # Step 3: Install all your project's dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Run your main synthesis script
      - name: Run data synthesis script
        run: python blanchot/run_synth.py

      # Step 5: Commit the updated data file back to the repository
      - name: Commit and push changes
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add -A
          git diff-index --quiet HEAD || git commit -m "Automated update: Refresh data.csv"
          git push